Es gibt beim Triple anlegen mit RDFSharp grunds�tzlich zwei Arten, die Daten im Triple zu repr�sentieren.

Die Klassen: RDFPlainLiteral/RDFTypedLiteral
Oder die Klasse: RDFResource

RDFResource bekommt eine URI welche das Objekt beschreibt, ist f�r unseren Anwendungsfall also wohl
eher nebens�chlich.

RDFPlainLiteral bekommt einen String, welcher die Daten repr�sentiert.
RDFTypedLiteral bekommt einen String, welcher die Daten repr�sentiert, und einen Typ, welcher den Typ des angegebenen Strings
repr�sentiert.

Ein Triple in RDFSharp ist ein Objekt welches aus 3 RDFResources oder RDFLiterals besteht.

Beispiel w�re: 
new RDFTriple(new RDFPlainLiteral("Tom"), new RDFPlainLiteral("ist"), new RDFPlainLiteral("Ein Wappla"));

Das Pr�dikat darf nicht leer sein und wird von RDFSharp gepr�ft. Falls leer, fliegt eine RDFModelException.
Wei� nicht was passiert wenn pr�dikat NULL ist.

Ein Graph (RDFGraph) ist eine Ansammlung von Triples
Graph kann auch von einem DataTable instanziert werden, per RDFGraph.FromDataTable(table);
Ein Graph implementiert einen IEnumerator.
Grph.TriplesCount gibt die Anzahl an Triples zur�ck.

Schaut so aus als könnte der Graph unser TripleStore sein.

Es gibt wohl auch RDFContainer und RDFCollection, um eine Gruppe an Objekten in eine Entität zu vereinen.
Beispiel Beatles --> Paul Mccartney, John Lennon, ...
Wenn ich brauche nachlesen auf Seite 11 ff.

Schaut so aus als könnte der Graph unser TripleStore sein.

### Import von Triples aus CSV-Files 

Dieses Kapitel beschäftigt sich mit dem Import von Triples aus CSV Dateien. 
Die relevante Komponente dafür ist der CSVDataReader. Dieser liest mit Hilfe des angegebenen Pfads, zur CSV-Datei, die Daten der Triple ein.
Die Methodensignatur für das einlesen der Daten schaut, wie folgt, aus:

```public IEnumerable<RawTripleData> Read(string path)```

Hier bekommen wir in Form eines Enumberable unsere Raw Triples zurück die dann in eine Ontologie integriert werden können. Doch davor werden diese an den sogenannten
Triple parser übergeben. Dieser validiert die Mindestanforderungen/ Contraints für ein Raw Triple. 


INFERENZREGELN:
Wenn das Objekt eines Triples irgendwo das Subjekt eines anderen Triples ist, dann hängen die beiden zusammen.
Beduetet, dass der REasoner einen Neuen Triple generieren kann, mit dem ursprünglichen Subjekt, sowie dem Prädikat und Objekt des zweiten Triples.
S1 P1 O1
S2 = O1 P2 O2

Es ergibt sich:
S1 P2 O2

Beispiel mit Wörtern:

Triple 1 = Tom; ist; ein Mensch;
Triple 2 = Mensch; hat; Füße;
Triple 3 (Reasoner inferenziert) = Tom; hat; Füße;

Beispiel 2 für Inferenz:
Reflexive Prädikate. Beispiel: Ist verheiratet mit.

Beispiel für 3 inferenz:

Dependency Properties. 
Elsa gehört Irina
Gregor ist zusammen mit Irina

Dependency Property --> Ist zusammen auf gehört => ist zusammen => gehört => Elsa gehört Gregor.
Dependencies gehen nur bei Prädikaten.
Sie sind Unidirektional.